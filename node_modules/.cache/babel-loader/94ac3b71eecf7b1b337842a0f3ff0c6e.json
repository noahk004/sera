{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport * as faceLandmarksDetection from '@tensorflow-models/face-landmarks-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nexport const useFaceDetector = videoRef => {\n  _s();\n  const [detector, setDetector] = useState(null);\n  const detectionInterval = useRef(null);\n  const audioRef = useRef(new Audio('/public/ringtone-126505.mp3'));\n  useEffect(() => {\n    const loadModel = async () => {\n      const model = faceLandmarksDetection.SupportedModels.MediaPipeFaceMesh;\n      const detectorConfig = {\n        runtime: 'tfjs',\n        solutionPath: 'https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh'\n      };\n      const loadedDetector = await faceLandmarksDetection.createDetector(model, detectorConfig);\n      setDetector(loadedDetector);\n    };\n    loadModel();\n  }, []);\n  useEffect(() => {\n    if (detector && videoRef.current) {\n      detectionInterval.current = setInterval(async () => {\n        if (videoRef.current && !videoRef.current.paused && !videoRef.current.ended) {\n          const faces = await detector.estimateFaces(videoRef.current, {\n            flipHorizontal: false\n          });\n          if (faces.length > 0) {\n            // Ensure faces are detected\n            const faceNames = faces[0]['keypoints'].filter(item => item.hasOwnProperty('name'));\n            const rightEye = faceNames.find(item => item.name === \"rightEye\");\n            const leftEye = faceNames.find(item => item.name === \"leftEye\");\n            const faceOval = faceNames.filter(item => item.name === \"faceOval\");\n            const faceOvalRight = faceOval[26].x;\n            const faceOvalLeft = faceOval[15].x;\n            if (rightEye && rightEye.x + 50 > faceOvalRight || leftEye && leftEye.x - 50 < faceOvalLeft) {\n              console.log('Condition Met, Playing Sound');\n              audioRef.current.play().catch(e => console.error('Error playing sound:', e.message));\n            } else {\n              console.log('Condition Not Met, Stopping Sound');\n              audioRef.current.pause();\n              audioRef.current.currentTime = 0;\n            }\n          }\n        }\n      }, 1000); // Run detection every 1000 milliseconds (1 second)\n    }\n    return () => {\n      if (detectionInterval.current) {\n        clearInterval(detectionInterval.current);\n      }\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    };\n  }, [detector, videoRef]);\n  return null;\n};\n_s(useFaceDetector, \"uDr7QR7Rv2obWtwvOk3pN3lU7tY=\");","map":{"version":3,"names":["useEffect","useState","useRef","faceLandmarksDetection","useFaceDetector","videoRef","_s","detector","setDetector","detectionInterval","audioRef","Audio","loadModel","model","SupportedModels","MediaPipeFaceMesh","detectorConfig","runtime","solutionPath","loadedDetector","createDetector","current","setInterval","paused","ended","faces","estimateFaces","flipHorizontal","length","faceNames","filter","item","hasOwnProperty","rightEye","find","name","leftEye","faceOval","faceOvalRight","x","faceOvalLeft","console","log","play","catch","e","error","message","pause","currentTime","clearInterval"],"sources":["/Users/sanskarmishra/Hackathon-2024/sera/src/facial-rec.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport * as faceLandmarksDetection from '@tensorflow-models/face-landmarks-detection';\nimport '@tensorflow/tfjs-backend-webgl';\n\nexport const useFaceDetector = (videoRef) => {\n    const [detector, setDetector] = useState(null);\n    const detectionInterval = useRef(null);\n    const audioRef = useRef(new Audio('/public/ringtone-126505.mp3'));\n\n    useEffect(() => {\n        const loadModel = async () => {\n            const model = faceLandmarksDetection.SupportedModels.MediaPipeFaceMesh;\n            const detectorConfig = {\n                runtime: 'tfjs',\n                solutionPath: 'https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh',\n            };\n            const loadedDetector = await faceLandmarksDetection.createDetector(model, detectorConfig);\n            setDetector(loadedDetector);\n        };\n\n        loadModel();\n    }, []);\n\n    useEffect(() => {\n        if (detector && videoRef.current) {\n            detectionInterval.current = setInterval(async () => {\n                if (videoRef.current && !videoRef.current.paused && !videoRef.current.ended) {\n                    const faces = await detector.estimateFaces(videoRef.current, { flipHorizontal: false });\n                    if (faces.length > 0) { // Ensure faces are detected\n                        const faceNames = faces[0]['keypoints'].filter(item => item.hasOwnProperty('name'));\n                        const rightEye = faceNames.find(item => item.name === \"rightEye\");\n                        const leftEye = faceNames.find(item => item.name === \"leftEye\");\n                        const faceOval = faceNames.filter(item => item.name === \"faceOval\");\n                        const faceOvalRight = faceOval[26].x;\n                        const faceOvalLeft = faceOval[15].x;\n\n                        if ((rightEye && rightEye.x + 50 > faceOvalRight) || (leftEye && leftEye.x - 50 < faceOvalLeft)) {\n                            console.log('Condition Met, Playing Sound');\n                            audioRef.current.play().catch(e => console.error('Error playing sound:', e.message));\n                        } else {\n                            console.log('Condition Not Met, Stopping Sound');\n                            audioRef.current.pause();\n                            audioRef.current.currentTime = 0;\n                        }\n                    }\n                }\n            }, 1000); // Run detection every 1000 milliseconds (1 second)\n        }\n\n        return () => {\n            if (detectionInterval.current) {\n                clearInterval(detectionInterval.current);\n            }\n            audioRef.current.pause();\n            audioRef.current.currentTime = 0;\n        };\n    }, [detector, videoRef]);\n\n    return null;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}