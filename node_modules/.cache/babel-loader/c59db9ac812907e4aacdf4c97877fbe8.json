{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nexport function zerosLike(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    x\n  } = inputs;\n  if (x.dtype === 'complex64') {\n    const realPart = real({\n      inputs: {\n        input: x\n      },\n      backend\n    });\n    const r = zerosLike({\n      inputs: {\n        x: realPart\n      },\n      backend\n    });\n    const imagPart = imag({\n      inputs: {\n        input: x\n      },\n      backend\n    });\n    const i = zerosLike({\n      inputs: {\n        x: imagPart\n      },\n      backend\n    });\n    const result = complex({\n      inputs: {\n        real: r,\n        imag: i\n      },\n      backend\n    });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n    return result;\n  } else {\n    return fill({\n      attrs: {\n        shape: x.shape,\n        dtype: x.dtype,\n        value: x.dtype === 'string' ? '' : 0\n      },\n      backend\n    });\n  }\n}\nexport const zerosLikeConfig = {\n  kernelName: ZerosLike,\n  backendName: 'webgl',\n  kernelFunc: zerosLike\n};","map":{"version":3,"sources":["../../../../../../tfjs-backend-webgl/src/kernels/ZerosLike.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAA8C,SAAS,QAAwB,uBAAuB;AAItG,SAAQ,OAAO,QAAO,WAAW;AACjC,SAAQ,IAAI,QAAO,QAAQ;AAC3B,SAAQ,IAAI,QAAO,QAAQ;AAC3B,SAAQ,IAAI,QAAO,QAAQ;AAE3B,OAAM,SAAU,SAAS,CACrB,IAA0D,EAAA;EAC5D,MAAM;IAAC,MAAM;IAAE;EAAO,CAAC,GAAG,IAAI;EAC9B,MAAM;IAAC;EAAC,CAAC,GAAG,MAAM;EAElB,IAAI,CAAC,CAAC,KAAK,KAAK,WAAW,EAAE;IAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC;MAAC,MAAM,EAAE;QAAC,KAAK,EAAE;MAAC,CAAC;MAAE;IAAO,CAAC,CAAC;IACpD,MAAM,CAAC,GAAG,SAAS,CAAC;MAAC,MAAM,EAAE;QAAC,CAAC,EAAE;MAAQ,CAAC;MAAE;IAAO,CAAC,CAAC;IACrD,MAAM,QAAQ,GAAG,IAAI,CAAC;MAAC,MAAM,EAAE;QAAC,KAAK,EAAE;MAAC,CAAC;MAAE;IAAO,CAAC,CAAC;IACpD,MAAM,CAAC,GAAG,SAAS,CAAC;MAAC,MAAM,EAAE;QAAC,CAAC,EAAE;MAAQ,CAAC;MAAE;IAAO,CAAC,CAAC;IAErD,MAAM,MAAM,GAAG,OAAO,CAAC;MAAC,MAAM,EAAE;QAAC,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE;MAAC,CAAC;MAAE;IAAO,CAAC,CAAC;IAE7D,OAAO,CAAC,6BAA6B,CAAC,QAAQ,CAAC;IAC/C,OAAO,CAAC,6BAA6B,CAAC,CAAC,CAAC;IACxC,OAAO,CAAC,6BAA6B,CAAC,QAAQ,CAAC;IAC/C,OAAO,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAExC,OAAO,MAAM;GACd,MAAM;IACL,OAAO,IAAI,CAAC;MACV,KAAK,EAAE;QACL,KAAK,EAAE,CAAC,CAAC,KAAK;QACd,KAAK,EAAE,CAAC,CAAC,KAAK;QACd,KAAK,EAAE,CAAC,CAAC,KAAK,KAAK,QAAQ,GAAG,EAAE,GAAG;OACpC;MACD;KACD,CAAC;EACH;AACH;AAEA,OAAO,MAAM,eAAe,GAAiB;EAC3C,UAAU,EAAE,SAAS;EACrB,WAAW,EAAE,OAAO;EACpB,UAAU,EAAE;CACb","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\n\nimport {complex} from './Complex';\nimport {fill} from './Fill';\nimport {imag} from './Imag';\nimport {real} from './Real';\n\nexport function zerosLike(\n    args: {inputs: ZerosLikeInputs, backend: MathBackendWebGL}): TensorInfo {\n  const {inputs, backend} = args;\n  const {x} = inputs;\n\n  if (x.dtype === 'complex64') {\n    const realPart = real({inputs: {input: x}, backend});\n    const r = zerosLike({inputs: {x: realPart}, backend});\n    const imagPart = imag({inputs: {input: x}, backend});\n    const i = zerosLike({inputs: {x: imagPart}, backend});\n\n    const result = complex({inputs: {real: r, imag: i}, backend});\n\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n\n    return result;\n  } else {\n    return fill({\n      attrs: {\n        shape: x.shape,\n        dtype: x.dtype,\n        value: x.dtype === 'string' ? '' : 0\n      },\n      backend\n    });\n  }\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'webgl',\n  kernelFunc: zerosLike as {} as KernelFunc\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}