{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nimport { FillProgram } from '../fill_gpu';\nexport function fill(args) {\n  const {\n    backend,\n    attrs\n  } = args;\n  const {\n    shape,\n    value\n  } = attrs;\n  let {\n    dtype\n  } = attrs;\n  dtype = dtype || util.inferDtype(value);\n  if (dtype === 'string') {\n    // String type should be handled in CPU memory.\n    const values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n    values.fill(value);\n    return backend.makeTensorInfo(shape, dtype, values);\n  } else {\n    const program = new FillProgram(shape, value);\n    const customValues = [[value]];\n    return backend.runWebGLProgram(program, [], dtype, customValues);\n  }\n}\nexport const fillConfig = {\n  kernelName: Fill,\n  backendName: 'webgl',\n  kernelFunc: fill\n};","map":{"version":3,"sources":["../../../../../../tfjs-backend-webgl/src/kernels/Fill.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,IAAI,EAAmD,IAAI,QAAO,uBAAuB;AAGjG,SAAQ,WAAW,QAAO,aAAa;AAEvC,OAAM,SAAU,IAAI,CAAC,IAAmD,EAAA;EAEtE,MAAM;IAAC,OAAO;IAAE;EAAK,CAAC,GAAG,IAAI;EAC7B,MAAM;IAAC,KAAK;IAAE;EAAK,CAAC,GAAG,KAAK;EAC5B,IAAI;IAAC;EAAK,CAAC,GAAG,KAAK;EAEnB,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;EAEvC,IAAI,KAAK,KAAK,QAAQ,EAAE;IACtB;IACA,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACvE,MAAM,CAAC,IAAI,CAAC,KAAe,CAAC;IAC5B,OAAO,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;GACpD,MAAM;IACL,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,KAAK,EAAE,KAAe,CAAC;IACvD,MAAM,YAAY,GAAG,CAAC,CAAC,KAAe,CAAC,CAAC;IACxC,OAAO,OAAO,CAAC,eAAe,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,YAAY,CAAC;EACjE;AACH;AAEA,OAAO,MAAM,UAAU,GAAiB;EACtC,UAAU,EAAE,IAAI;EAChB,WAAW,EAAE,OAAO;EACpB,UAAU,EAAE;CACb","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Fill, FillAttrs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {FillProgram} from '../fill_gpu';\n\nexport function fill(args: {backend: MathBackendWebGL, attrs: FillAttrs}):\n    TensorInfo {\n  const {backend, attrs} = args;\n  const {shape, value} = attrs;\n  let {dtype} = attrs;\n\n  dtype = dtype || util.inferDtype(value);\n\n  if (dtype === 'string') {\n    // String type should be handled in CPU memory.\n    const values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n    values.fill(value as string);\n    return backend.makeTensorInfo(shape, dtype, values);\n  } else {\n    const program = new FillProgram(shape, value as number);\n    const customValues = [[value as number]];\n    return backend.runWebGLProgram(program, [], dtype, customValues);\n  }\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'webgl',\n  kernelFunc: fill as {} as KernelFunc\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}