{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ClipProgram {\n  constructor(aShape) {\n    this.variableNames = ['A'];\n    this.customUniforms = [{\n      name: 'minVal',\n      type: 'float'\n    }, {\n      name: 'maxVal',\n      type: 'float'\n    }];\n    this.outputShape = aShape;\n    this.userCode = `\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    `;\n  }\n}","map":{"version":3,"sources":["../../../../../tfjs-backend-webgl/src/clip_gpu.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAKH,OAAM,MAAO,WAAW,CAAA;EAStB,WAAA,CAAY,MAAgB,EAAA;IAR5B,IAAA,CAAA,aAAa,GAAG,CAAC,GAAG,CAAC;IAGrB,IAAA,CAAA,cAAc,GAAG,CACf;MAAC,IAAI,EAAE,QAAQ;MAAE,IAAI,EAAE;IAAsB,CAAC,EAC9C;MAAC,IAAI,EAAE,QAAQ;MAAE,IAAI,EAAE;IAAsB,CAAC,CAC/C;IAGC,IAAI,CAAC,WAAW,GAAG,MAAM;IACzB,IAAI,CAAC,QAAQ,GAAG;;;;;;;;;;;KAWf;EACH;AACD","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {UniformType} from './shader_compiler';\n\nexport class ClipProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n  customUniforms = [\n    {name: 'minVal', type: 'float' as UniformType},\n    {name: 'maxVal', type: 'float' as UniformType}\n  ];\n\n  constructor(aShape: number[]) {\n    this.outputShape = aShape;\n    this.userCode = `\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    `;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}