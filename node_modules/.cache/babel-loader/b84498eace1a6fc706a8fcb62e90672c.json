{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { BrowserIndexedDB, BrowserIndexedDBManager } from '../io/indexed_db';\nimport { BrowserLocalStorage, BrowserLocalStorageManager } from '../io/local_storage';\nimport { ModelStoreManagerRegistry } from '../io/model_management';\nexport class PlatformBrowser {\n  fetch(path, init) {\n    return fetch(path, init);\n  }\n  now() {\n    return performance.now();\n  }\n  encode(text, encoding) {\n    if (encoding !== 'utf-8' && encoding !== 'utf8') {\n      throw new Error(`Browser's encoder only supports utf-8, but got ${encoding}`);\n    }\n    if (this.textEncoder == null) {\n      this.textEncoder = new TextEncoder();\n    }\n    return this.textEncoder.encode(text);\n  }\n  decode(bytes, encoding) {\n    return new TextDecoder(encoding).decode(bytes);\n  }\n}\nif (env().get('IS_BROWSER')) {\n  env().setPlatform('browser', new PlatformBrowser());\n  // Register LocalStorage IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n  } catch (err) {}\n  // Register IndexedDB IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n  } catch (err) {}\n}","map":{"version":3,"sources":["../../../../../../tfjs-core/src/platforms/platform_browser.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,OAAO,UAAU;AAEjB,SAAQ,GAAG,QAAO,gBAAgB;AAClC,SAAQ,gBAAgB,EAAE,uBAAuB,QAAO,kBAAkB;AAC1E,SAAQ,mBAAmB,EAAE,0BAA0B,QAAO,qBAAqB;AACnF,SAAQ,yBAAyB,QAAO,wBAAwB;AAIhE,OAAM,MAAO,eAAe,CAAA;EAK1B,KAAK,CAAC,IAAY,EAAE,IAAkB,EAAA;IACpC,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;EAC1B;EAEA,GAAG,CAAA,EAAA;IACD,OAAO,WAAW,CAAC,GAAG,CAAA,CAAE;EAC1B;EAEA,MAAM,CAAC,IAAY,EAAE,QAAgB,EAAA;IACnC,IAAI,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,MAAM,EAAE;MAC/C,MAAM,IAAI,KAAK,CACX,kDAAkD,QAAQ,EAAE,CAAC;IAClE;IACD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;MAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAA,CAAE;IACrC;IACD,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC;EACtC;EACA,MAAM,CAAC,KAAiB,EAAE,QAAgB,EAAA;IACxC,OAAO,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;EAChD;AACD;AAED,IAAI,GAAG,CAAA,CAAE,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;EAC3B,GAAG,CAAA,CAAE,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,eAAe,CAAA,CAAE,CAAC;EAEnD;EACA,IAAI;IACF,yBAAyB,CAAC,eAAe,CACrC,mBAAmB,CAAC,UAAU,EAAE,IAAI,0BAA0B,CAAA,CAAE,CAAC;GACtE,CAAC,OAAO,GAAG,EAAE,CACb;EAED;EACA,IAAI;IACF,yBAAyB,CAAC,eAAe,CACrC,gBAAgB,CAAC,UAAU,EAAE,IAAI,uBAAuB,CAAA,CAAE,CAAC;GAChE,CAAC,OAAO,GAAG,EAAE,CACb;AACF","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport '../flags';\n\nimport {env} from '../environment';\nimport {BrowserIndexedDB, BrowserIndexedDBManager} from '../io/indexed_db';\nimport {BrowserLocalStorage, BrowserLocalStorageManager} from '../io/local_storage';\nimport {ModelStoreManagerRegistry} from '../io/model_management';\n\nimport {Platform} from './platform';\n\nexport class PlatformBrowser implements Platform {\n  // According to the spec, the built-in encoder can do only UTF-8 encoding.\n  // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n  private textEncoder: TextEncoder;\n\n  fetch(path: string, init?: RequestInit): Promise<Response> {\n    return fetch(path, init);\n  }\n\n  now(): number {\n    return performance.now();\n  }\n\n  encode(text: string, encoding: string): Uint8Array {\n    if (encoding !== 'utf-8' && encoding !== 'utf8') {\n      throw new Error(\n          `Browser's encoder only supports utf-8, but got ${encoding}`);\n    }\n    if (this.textEncoder == null) {\n      this.textEncoder = new TextEncoder();\n    }\n    return this.textEncoder.encode(text);\n  }\n  decode(bytes: Uint8Array, encoding: string): string {\n    return new TextDecoder(encoding).decode(bytes);\n  }\n}\n\nif (env().get('IS_BROWSER')) {\n  env().setPlatform('browser', new PlatformBrowser());\n\n  // Register LocalStorage IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(\n        BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n  } catch (err) {\n  }\n\n  // Register IndexedDB IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(\n        BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n  } catch (err) {\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}