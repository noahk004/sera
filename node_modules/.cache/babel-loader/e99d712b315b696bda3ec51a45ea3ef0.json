{"ast":null,"code":"var _s = $RefreshSig$();\n//facial-rec.js\nimport { useEffect, useState, useRef } from 'react';\nimport * as faceLandmarksDetection from '@tensorflow-models/face-landmarks-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nexport const useFaceDetector = videoRef => {\n  _s();\n  const [detector, setDetector] = useState(null);\n  const detectionInterval = useRef(null);\n  const audioRef = useRef(new Audio('/ringtone-126505.mp3'));\n  const [playSound, setPlaySound] = useState(false);\n  useEffect(() => {\n    const loadModel = async () => {\n      const model = faceLandmarksDetection.SupportedModels.MediaPipeFaceMesh;\n      const detectorConfig = {\n        runtime: 'tfjs',\n        solutionPath: 'https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh'\n      };\n      const detector = await faceLandmarksDetection.createDetector(model, detectorConfig);\n      setDetector(detector);\n    };\n    loadModel();\n  }, []);\n  useEffect(() => {\n    const checkFaces = async () => {\n      if (videoRef.current && !videoRef.current.paused && !videoRef.current.ended) {\n        const faces = await detector.estimateFaces(videoRef.current, {\n          flipHorizontal: false\n        });\n        try {\n          var _faceNames$find, _faceNames$find2, _faceNames$filter$, _faceNames$filter$2;\n          const faceNames = faces[0]['keypoints'].filter(items => items.hasOwnProperty('name'));\n          const rightEye = (_faceNames$find = faceNames.find(item => item.name === \"rightEye\")) === null || _faceNames$find === void 0 ? void 0 : _faceNames$find.x;\n          const leftEye = (_faceNames$find2 = faceNames.find(item => item.name === \"leftEye\")) === null || _faceNames$find2 === void 0 ? void 0 : _faceNames$find2.x;\n          const faceOvalRight = (_faceNames$filter$ = faceNames.filter(item => item.name === \"faceOval\")[26]) === null || _faceNames$filter$ === void 0 ? void 0 : _faceNames$filter$.x;\n          const faceOvalLeft = (_faceNames$filter$2 = faceNames.filter(item => item.name === \"faceOval\")[15]) === null || _faceNames$filter$2 === void 0 ? void 0 : _faceNames$filter$2.x;\n          if (rightEye && leftEye && faceOvalRight && faceOvalLeft) {\n            if (rightEye + 50 > faceOvalRight || leftEye - 50 < faceOvalLeft) {\n              if (!playSound) {\n                setPlaySound(true);\n                audioRef.current.play();\n                console.log(\"not locked in\");\n              }\n            } else {\n              if (playSound) {\n                setPlaySound(false);\n                audioRef.current.pause();\n                audioRef.current.currentTime = 0;\n                console.log(\"locked in\");\n              }\n            }\n          }\n        } catch (error) {\n          console.error(\"Error processing facial landmarks:\", error);\n        }\n      }\n    };\n    if (detector && videoRef.current) {\n      checkFaces(); // Run immediately on load\n      detectionInterval.current = setInterval(checkFaces, 3000); // Run every 3 seconds\n    }\n    return () => {\n      if (detectionInterval.current) {\n        clearInterval(detectionInterval.current);\n      }\n      audioRef.current.pause();\n    };\n  }, [detector, videoRef, playSound]);\n  return null;\n};\n_s(useFaceDetector, \"TvLLSFIwkrzV/noFkLAUu1ZEITM=\");","map":{"version":3,"names":["useEffect","useState","useRef","faceLandmarksDetection","useFaceDetector","videoRef","_s","detector","setDetector","detectionInterval","audioRef","Audio","playSound","setPlaySound","loadModel","model","SupportedModels","MediaPipeFaceMesh","detectorConfig","runtime","solutionPath","createDetector","checkFaces","current","paused","ended","faces","estimateFaces","flipHorizontal","_faceNames$find","_faceNames$find2","_faceNames$filter$","_faceNames$filter$2","faceNames","filter","items","hasOwnProperty","rightEye","find","item","name","x","leftEye","faceOvalRight","faceOvalLeft","play","console","log","pause","currentTime","error","setInterval","clearInterval"],"sources":["/Users/sanskarmishra/Hackathon-2024/sera/src/facial-rec.js"],"sourcesContent":["//facial-rec.js\nimport { useEffect, useState, useRef } from 'react';\nimport * as faceLandmarksDetection from '@tensorflow-models/face-landmarks-detection';\nimport '@tensorflow/tfjs-backend-webgl';\n\nexport const useFaceDetector = (videoRef) => {\n    const [detector, setDetector] = useState(null);\n    const detectionInterval = useRef(null);\n    const audioRef = useRef(new Audio('/ringtone-126505.mp3'));\n    const [playSound, setPlaySound] = useState(false);\n\n    useEffect(() => {\n        const loadModel = async () => {\n            const model = faceLandmarksDetection.SupportedModels.MediaPipeFaceMesh;\n            const detectorConfig = {\n                runtime: 'tfjs',\n                solutionPath: 'https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh',\n            };\n            const detector = await faceLandmarksDetection.createDetector(model, detectorConfig);\n            setDetector(detector);\n        };\n\n        loadModel();\n    }, []);\n\n    useEffect(() => {\n        const checkFaces = async () => {\n            if (videoRef.current && !videoRef.current.paused && !videoRef.current.ended) {\n                const faces = await detector.estimateFaces(videoRef.current, { flipHorizontal: false });\n                try {\n                    const faceNames = faces[0]['keypoints'].filter(items => items.hasOwnProperty('name'));\n                    const rightEye = faceNames.find(item => item.name === \"rightEye\")?.x;\n                    const leftEye = faceNames.find(item => item.name === \"leftEye\")?.x;\n                    const faceOvalRight = faceNames.filter(item => item.name === \"faceOval\")[26]?.x;\n                    const faceOvalLeft = faceNames.filter(item => item.name === \"faceOval\")[15]?.x;\n\n                    if (rightEye && leftEye && faceOvalRight && faceOvalLeft) {\n                        if (rightEye + 50 > faceOvalRight || leftEye - 50 < faceOvalLeft) {\n                            if (!playSound) {\n                                setPlaySound(true);\n                                audioRef.current.play();\n                                console.log(\"not locked in\")\n                            }\n                        } else {\n                            if (playSound) {\n                                setPlaySound(false);\n                                audioRef.current.pause();\n                                audioRef.current.currentTime = 0;\n                                console.log(\"locked in\")\n                            }\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"Error processing facial landmarks:\", error);\n                }\n            }\n        };\n\n        if (detector && videoRef.current) {\n            checkFaces(); // Run immediately on load\n            detectionInterval.current = setInterval(checkFaces, 3000); // Run every 3 seconds\n        }\n\n        return () => {\n            if (detectionInterval.current) {\n                clearInterval(detectionInterval.current);\n            }\n            audioRef.current.pause();\n        };\n    }, [detector, videoRef, playSound]);\n\n    return null;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}