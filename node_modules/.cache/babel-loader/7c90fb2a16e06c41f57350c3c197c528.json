{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from '../kernels/Reshape';\nexport function meanImpl(x, reduceShape, outShape, backend) {\n  const inSize = util.sizeFromShape(reduceShape);\n  const xSize = util.sizeFromShape(x.shape);\n  const batchSize = xSize / inSize;\n  const reshapedInput = reshape({\n    inputs: {\n      x\n    },\n    attrs: {\n      shape: [batchSize, inSize]\n    },\n    backend\n  });\n  const reduced = reduce(reshapedInput, 'float32', 'mean', backend);\n  const reshapedOutput = reshape({\n    inputs: {\n      x: reduced\n    },\n    attrs: {\n      shape: outShape\n    },\n    backend\n  });\n  backend.disposeIntermediateTensorInfo(reshapedInput);\n  backend.disposeIntermediateTensorInfo(reduced);\n  return reshapedOutput;\n}","map":{"version":3,"sources":["../../../../../../tfjs-backend-webgl/src/kernels/Mean_impl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAoB,IAAI,QAAO,uBAAuB;AAGtD,SAAQ,MAAM,QAAO,wBAAwB;AAC7C,SAAQ,OAAO,QAAO,oBAAoB;AAE1C,OAAM,SAAU,QAAQ,CACpB,CAAa,EAAE,WAAqB,EAAE,QAAkB,EACxD,OAAyB,EAAA;EAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;EAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC;EACzC,MAAM,SAAS,GAAG,KAAK,GAAG,MAAM;EAChC,MAAM,aAAa,GACf,OAAO,CAAC;IAAC,MAAM,EAAE;MAAC;IAAC,CAAC;IAAE,KAAK,EAAE;MAAC,KAAK,EAAE,CAAC,SAAS,EAAE,MAAM;IAAC,CAAC;IAAE;EAAO,CAAC,CAAC;EAExE,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC;EACjE,MAAM,cAAc,GAChB,OAAO,CAAC;IAAC,MAAM,EAAE;MAAC,CAAC,EAAE;IAAO,CAAC;IAAE,KAAK,EAAE;MAAC,KAAK,EAAE;IAAQ,CAAC;IAAE;EAAO,CAAC,CAAC;EAEtE,OAAO,CAAC,6BAA6B,CAAC,aAAa,CAAC;EACpD,OAAO,CAAC,6BAA6B,CAAC,OAAO,CAAC;EAE9C,OAAO,cAAc;AACvB","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {reduce} from '../kernel_utils/reduce';\nimport {reshape} from '../kernels/Reshape';\n\nexport function meanImpl(\n    x: TensorInfo, reduceShape: number[], outShape: number[],\n    backend: MathBackendWebGL): TensorInfo {\n  const inSize = util.sizeFromShape(reduceShape);\n  const xSize = util.sizeFromShape(x.shape);\n  const batchSize = xSize / inSize;\n  const reshapedInput =\n      reshape({inputs: {x}, attrs: {shape: [batchSize, inSize]}, backend});\n\n  const reduced = reduce(reshapedInput, 'float32', 'mean', backend);\n  const reshapedOutput =\n      reshape({inputs: {x: reduced}, attrs: {shape: outShape}, backend});\n\n  backend.disposeIntermediateTensorInfo(reshapedInput);\n  backend.disposeIntermediateTensorInfo(reduced);\n\n  return reshapedOutput;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}