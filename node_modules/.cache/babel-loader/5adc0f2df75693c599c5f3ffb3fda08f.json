{"ast":null,"code":"var _s = $RefreshSig$();\n//facial-rec.js\nimport { useEffect, useState, useRef } from 'react';\nimport * as faceLandmarksDetection from '@tensorflow-models/face-landmarks-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nexport const useFaceDetector = videoRef => {\n  _s();\n  const [detector, setDetector] = useState(null);\n  const detectionInterval = useRef(null);\n  useEffect(() => {\n    const loadModel = async () => {\n      const model = faceLandmarksDetection.SupportedModels.MediaPipeFaceMesh;\n      const detectorConfig = {\n        runtime: 'tfjs',\n        // or 'tfjs'\n        solutionPath: 'https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh'\n      };\n      const detector = await faceLandmarksDetection.createDetector(model, detectorConfig);\n      setDetector(detector);\n    };\n    loadModel();\n  }, []);\n  useEffect(() => {\n    if (detector && videoRef.current) {\n      detectionInterval.current = setInterval(async () => {\n        if (videoRef.current && !videoRef.current.paused && !videoRef.current.ended) {\n          const faces = await detector.estimateFaces(videoRef.current, {\n            flipHorizontal: false\n          });\n          //console.log(faces[0].filter(items => Object.keys('keypoints').hasOwnProperty('name')));\n          const faceNames = faces[0]['keypoints'].filter(items => items.hasOwnProperty('name'));\n          //console.log(faces[0]['keypoints'].filter(items => items.hasOwnProperty('name')));\n          const rightEye = faceNames.filter(items => items[\"name\"] == \"rightEye\")[2].x;\n          const leftEye = faceNames.filter(items => items[\"name\"] == \"leftEye\")[2].x;\n          const faceOvalRight = faceNames.filter(items => items[\"name\"] == \"faceOval\")[26].x;\n          const faceOvalLeft = faceNames.filter(items => items[\"name\"] == \"faceOval\")[15].x;\n          if (rightEye > faceOvalRight || leftEye < faceOvalLeft) {\n            console.log(false);\n          } else {\n            console.log(true);\n          }\n          console.log(rightEye);\n          // Additional logic to handle the detected faces\n        }\n      }, 1000); // Run detection every 1000 milliseconds (1 second)\n    }\n    return () => {\n      if (detectionInterval.current) {\n        clearInterval(detectionInterval.current);\n      }\n    };\n  }, [detector, videoRef]);\n  return null;\n};\n_s(useFaceDetector, \"VuWUCnYQw/TsTVEZEHH7uVtGv2g=\");","map":{"version":3,"names":["useEffect","useState","useRef","faceLandmarksDetection","useFaceDetector","videoRef","_s","detector","setDetector","detectionInterval","loadModel","model","SupportedModels","MediaPipeFaceMesh","detectorConfig","runtime","solutionPath","createDetector","current","setInterval","paused","ended","faces","estimateFaces","flipHorizontal","faceNames","filter","items","hasOwnProperty","rightEye","x","leftEye","faceOvalRight","faceOvalLeft","console","log","clearInterval"],"sources":["/Users/sanskarmishra/Hackathon-2024/sera/src/facial-rec.js"],"sourcesContent":["//facial-rec.js\nimport { useEffect, useState, useRef } from 'react';\nimport * as faceLandmarksDetection from '@tensorflow-models/face-landmarks-detection';\nimport '@tensorflow/tfjs-backend-webgl';\n\nexport const useFaceDetector = (videoRef) => {\n    const [detector, setDetector] = useState(null);\n    const detectionInterval = useRef(null);\n\n    useEffect(() => {\n        const loadModel = async () => {\n            const model = faceLandmarksDetection.SupportedModels.MediaPipeFaceMesh;\n            const detectorConfig = {\n                runtime: 'tfjs', // or 'tfjs'\n                solutionPath: 'https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh',\n            };\n            const detector = await faceLandmarksDetection.createDetector(model, detectorConfig);\n            setDetector(detector);\n        };\n\n        loadModel();\n    }, []);\n\n    useEffect(() => {\n        if (detector && videoRef.current) {\n            detectionInterval.current = setInterval(async () => {\n                if (videoRef.current && !videoRef.current.paused && !videoRef.current.ended) {\n                    const faces = await detector.estimateFaces(videoRef.current, { flipHorizontal: false });\n                    //console.log(faces[0].filter(items => Object.keys('keypoints').hasOwnProperty('name')));\n                    const faceNames = faces[0]['keypoints'].filter(items => items.hasOwnProperty('name'));\n                    //console.log(faces[0]['keypoints'].filter(items => items.hasOwnProperty('name')));\n                    const rightEye = faceNames.filter(items => items[\"name\"] == \"rightEye\")[2].x;\n                    const leftEye = faceNames.filter(items => items[\"name\"] == \"leftEye\")[2].x;\n                    const faceOvalRight = faceNames.filter(items => items[\"name\"] == \"faceOval\")[26].x;\n                    const faceOvalLeft = faceNames.filter(items => items[\"name\"] == \"faceOval\")[15].x;\n                    \n                    if (rightEye > faceOvalRight || leftEye < faceOvalLeft) {\n                        console.log(false);\n                    } else {\n                        console.log(true);\n                    }\n                    console.log(rightEye);\n                    // Additional logic to handle the detected faces\n                }\n            }, 1000); // Run detection every 1000 milliseconds (1 second)\n        }\n\n        return () => {\n            if (detectionInterval.current) {\n                clearInterval(detectionInterval.current);\n            }\n        };\n    }, [detector, videoRef]);\n\n    return null;\n};"],"mappings":";AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,KAAKC,sBAAsB,MAAM,6CAA6C;AACrF,OAAO,gCAAgC;AAEvC,OAAO,MAAMC,eAAe,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMQ,iBAAiB,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEtCF,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,KAAK,GAAGR,sBAAsB,CAACS,eAAe,CAACC,iBAAiB;MACtE,MAAMC,cAAc,GAAG;QACnBC,OAAO,EAAE,MAAM;QAAE;QACjBC,YAAY,EAAE;MAClB,CAAC;MACD,MAAMT,QAAQ,GAAG,MAAMJ,sBAAsB,CAACc,cAAc,CAACN,KAAK,EAAEG,cAAc,CAAC;MACnFN,WAAW,CAACD,QAAQ,CAAC;IACzB,CAAC;IAEDG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,IAAIF,QAAQ,CAACa,OAAO,EAAE;MAC9BT,iBAAiB,CAACS,OAAO,GAAGC,WAAW,CAAC,YAAY;QAChD,IAAId,QAAQ,CAACa,OAAO,IAAI,CAACb,QAAQ,CAACa,OAAO,CAACE,MAAM,IAAI,CAACf,QAAQ,CAACa,OAAO,CAACG,KAAK,EAAE;UACzE,MAAMC,KAAK,GAAG,MAAMf,QAAQ,CAACgB,aAAa,CAAClB,QAAQ,CAACa,OAAO,EAAE;YAAEM,cAAc,EAAE;UAAM,CAAC,CAAC;UACvF;UACA,MAAMC,SAAS,GAAGH,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAACI,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;UACrF;UACA,MAAMC,QAAQ,GAAGJ,SAAS,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAACG,CAAC;UAC5E,MAAMC,OAAO,GAAGN,SAAS,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAACG,CAAC;UAC1E,MAAME,aAAa,GAAGP,SAAS,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAACG,CAAC;UAClF,MAAMG,YAAY,GAAGR,SAAS,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAACG,CAAC;UAEjF,IAAID,QAAQ,GAAGG,aAAa,IAAID,OAAO,GAAGE,YAAY,EAAE;YACpDC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;UACtB,CAAC,MAAM;YACHD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;UACrB;UACAD,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;UACrB;QACJ;MACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACd;IAEA,OAAO,MAAM;MACT,IAAIpB,iBAAiB,CAACS,OAAO,EAAE;QAC3BkB,aAAa,CAAC3B,iBAAiB,CAACS,OAAO,CAAC;MAC5C;IACJ,CAAC;EACL,CAAC,EAAE,CAACX,QAAQ,EAAEF,QAAQ,CAAC,CAAC;EAExB,OAAO,IAAI;AACf,CAAC;AAACC,EAAA,CAlDWF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}